
cmake_minimum_required(VERSION 3.11)

# set the project name
project(__NAME__)

if(NOT DEFINED IGNORE_CUSTOM_CPP_STANDARD)
	set(CMAKE_CXX_STANDARD __STANDARD__)
	set(CMAKE_CXX_STANDARD_REQUIRED True)
endif()

list(APPEND CUSTOM_COMPILE_OPTIONS)
list(APPEND CUSTOM_LINK_OPTIONS)

##############################################################################################
#CUSTOM_COMPILE_OPTIONS

# https://clang.llvm.org/docs/ClangCommandLineReference.html#optimization-level
list(APPEND CUSTOM_COMPILE_OPTIONS
	"$<$<CONFIG:Debug>:-gfull>"
	"$<$<CONFIG:Release>:-Ofast>"
	"-fms-extensions"
	"-pedantic"
	"-Wno-gnu-zero-variadic-macro-arguments"
)
# https://stackoverflow.com/questions/21266380/is-the-gnu-zero-variadic-macro-arguments-safe-to-ignore
list(APPEND CUSTOM_LINK_OPTIONS
	"$<$<CONFIG:Debug>:-gfull>"
	"$<$<CONFIG:Release>:-Ofast>"
)

if(__FULL_WARNINGS__)
	# full warnings, w4, warnings as errors
	list(APPEND CUSTOM_COMPILE_OPTIONS "-Wall" "-Wextra" "-Werror")
elseif (__DISABLE_WARNINGS__)
	# warnings disabled
	list(APPEND CUSTOM_COMPILE_OPTIONS "-Wno-everything")
else()
	# warnings as errors
	list(APPEND CUSTOM_COMPILE_OPTIONS "-Werror")
endif()

##############################################################################################
#CUSTOM_LINK_OPTIONS

if(__THREADS__) # using threads ? YES/NO
	find_package (Threads)
	list(APPEND CUSTOM_LINK_OPTIONS ${CMAKE_THREAD_LIBS_INIT})
endif()

##############################################################################################

__ADD_TYPE__(
	__NAME__ __ADD_TYPE_DATA__
	__SRC__
)

target_compile_definitions(
	__NAME__ PRIVATE
	"$<$<CONFIG:Debug>:DEBUG>"
	"$<$<CONFIG:Release>:NDEBUG>"
	__DEF__
)

target_include_directories(
	__NAME__ PRIVATE
	__INCL__
)

list(APPEND CUSTOM_LINK_OPTIONS
	__LINKS__
)

if(__ISEXECUTABLE__)
	set_target_properties(__NAME__ PROPERTIES
		LINK_FLAGS "-s WASM=1 -s EXPORTED_FUNCTIONS='[_main]' -s EXPORTED_RUNTIME_METHODS='[\"cwrap\", \"ccall\"]'"
	)
endif()

##############################################################################################

target_compile_options(__NAME__ PRIVATE
	${CUSTOM_COMPILE_OPTIONS}
)
target_link_libraries(__NAME__ PRIVATE
	${CUSTOM_LINK_OPTIONS}
)

##############################################################################################

if(__ISEXECUTABLE__)
	add_custom_command(TARGET __NAME__ POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy_if_different
			${CMAKE_SOURCE_DIR}/${ACTIVE_BUILD_CONFIGURATION}/projects/__NAME__/__NAME__.js
			${CMAKE_SOURCE_DIR}/${ACTIVE_BUILD_CONFIGURATION}/projects/__NAME__/__NAME__.wasm
			${CMAKE_SOURCE_DIR}/www/${ACTIVE_BUILD_CONFIGURATION}
	)
endif()